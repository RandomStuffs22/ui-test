package org.exoplatform.selenium.platform.plf.functional.homepagegadgets.suggestiongadget;

import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.Button;
import org.exoplatform.selenium.Utils;
import org.exoplatform.selenium.platform.HomePageGadget;
import org.exoplatform.selenium.platform.ManageAccount;
import org.exoplatform.selenium.platform.NavigationToolbar;
import org.exoplatform.selenium.platform.UserGroupManagement;
import org.exoplatform.selenium.platform.ManageAccount.userType;
import org.exoplatform.selenium.platform.social.Activity;
import org.exoplatform.selenium.platform.social.ManageMember;
import org.exoplatform.selenium.platform.social.PeopleConnection;
import org.exoplatform.selenium.platform.social.SpaceManagement;
import org.testng.annotations.*;

/**
 * @author chinhdtt
 * @date 10 Feb 2014
 */
public class PLF_HomepageGadgets_SuggestionGadget extends Activity{
	ManageAccount acc; 
	NavigationToolbar nav; 
	PeopleConnection pConn; 
	String user = "John Smith";
	String user1 = "Jack Miller";
	String user2 = "James Davis";
	String user3 = "Mary Williams";
	String user4 = "FQA VN";
	ManageMember mMember; 
	HomePageGadget hGadget; 
	UserGroupManagement uGroup; 
	SpaceManagement mSpace;
	Button button; 

	@BeforeMethod
	public void beforeMethods(){	
		initSeleniumTest();
		driver.get(baseUrl);
		acc = new ManageAccount(driver, this.plfVersion);
		nav = new NavigationToolbar(driver, this.plfVersion);	
		pConn = new PeopleConnection(driver, this.plfVersion);
		mMember = new ManageMember(driver, this.plfVersion);	
		hGadget = new HomePageGadget(driver);
		uGroup = new UserGroupManagement(driver, this.plfVersion);
		mSpace = new SpaceManagement(driver, this.plfVersion);
		acc.signIn(DATA_USER_JOHN, DATA_PASS);		
		button = new Button(driver, this.plfVersion);
	}

	@AfterMethod
	public void afterMethods() {
		info("Logout portal");
		driver.manage().deleteAllCookies();
		driver.quit();
	}

	/**
	 * Case ID:79607.
	 * Test Case Name: Display 2 People and 2 Space suggestions.
	 * Pre-Condition: More than 2 peoples are members in Intranet More than 2 Spaces exist in Intranet User isn't connected to any spaces and peoplein the Intranet
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test01_Display2PeopleAnd2SpaceSuggestions() {
		info("Test 1: Display 2 People and 2 Space suggestions");
		String nameSpace1 = getRandomString();
		String nameSpace2 = getRandomString();
		String nameSpace3 = getRandomString();

		//Pre-Condition
		info("Add new space1");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace1,"");	
		info("Add new space2");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace2,"");
		info("Add new space3");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace3,"");

		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: 
		- The suggestion gadget is displayed in the right panel of the Intranet Homepage
		- The gadget displays 2 people suggestions and 2 Space suggestions		*/ 	
		info("View suggestion gadget");
		acc.userSignIn(userType.DEVELOPER);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user4));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user3));
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user2));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace3));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace2));
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1));		

		//Delete data test
		acc.userSignIn(userType.ADMIN);
		info("Delete spaces test");
		mMember.goToAllSpaces();
		mMember.deleteSpace(nameSpace1, 300000);
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace2, 300000);	
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace3, 300000);
	}

	/**
	 * Case ID:79608.
	 * Test Case Name: Display 2 people without connections in common.
	 * Pre-Condition: More than 2 users are members in Intranet The User isn't connected with any member of Intranet
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 * BugID: https://jira.exoplatform.org/browse/PLF-5354
	 */
	@Test (groups = "errors")
	public  void test02_Display2PeopleWithoutConnectionsInCommon() {
		info("Test 2: Display 2 people without connections in common");
		String username1 = getRandomString();
		String password = "gtn123";
		String firstName1 = "User";
		String lastName1 = "AAA";
		String email1 = username1+"@gmail.com";
		String username2 = getRandomString();
		String firstName2 = "User";
		String lastName2 = "BBB";
		String email2 = username2+"@gmail.com";
		String username3 = "testfff";
		String firstName3 = "User";
		String lastName3 = "CCC";
		String email3 = username3+"@gmail.com";

		//Pre-Condition
		info("Add new 3 users");
		nav.goToNewStaff();
		acc.addNewUserAccount(username1, password, password, firstName1, lastName1, "", email1, null, null, false);
		Utils.pause(2000);		
		button.ok();
		acc.addNewUserAccount(username2, password, password, firstName2, lastName2, "", email2, null, null, false);
		Utils.pause(2000);
		button.ok();
		acc.addNewUserAccount(username3, password, password, firstName3, lastName3, "", email3, null, null, false);
		Utils.pause(2000);
		button.ok();
		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: 
		- The Suggestion Gadget is displayed
		- 2 People are suggested
		- People displayed are Last users that has joined the Intranet		*/ 
		info("View suggestion gadget");
		nav.goToHomePage();
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", firstName3+" "+lastName3));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", firstName2+" "+lastName2));
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", firstName1+" "+lastName1));

		//Delete data test
		info("Delete users test");
		nav.goToUsersAndGroupsManagement();
		uGroup.deleteUser(username1);
		Utils.pause(1000);
		nav.goToUsersAndGroupsManagement();
		uGroup.deleteUser(username2);
		Utils.pause(1000);
		nav.goToUsersAndGroupsManagement();
		uGroup.deleteUser(username3);
	}

	/**
	 * Case ID:79609.
	 * Test Case Name: Display 1 People without common connections and 1 People with common connections.
	 * Pre-Condition: User A isn't connected with some users in Intranet (B, C, D)
	 * ------- User A is connected to X,Y B is connected to X, Y 
	 * ------- User A has common connections only with the user B
	 * ------- User A and User B aren't connected in Intranet
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 * BugID: https://jira.exoplatform.org/browse/PLF-5354
	 */
	@Test (groups = "errors")
	public  void test03_Display1PeopleWithoutCommonConnectionsAnd1PeopleWithCommonConnections() {
		info("Test 3: Display 1 People without common connections and 1 People with common connections");
		String username1 = getRandomString();
		String password1 = "gtn123";
		String firstName1 = "User";
		String lastName1 = "DDD";
		String email1 = username1+"@gmail.com";

		//Pre-Condition
		info("Connect X, Y users");
		nav.goToConnectionPage();
		pConn.connectPeople(user2);
		driver.navigate().refresh();
		pConn.connectPeople(user3);
		info("Add new user");
		nav.goToNewStaff();
		acc.addNewUserAccount(username1, password1, password1, firstName1, lastName1, "", email1, null, null, false);
		Utils.pause(2000);		
		button.ok();

		info("User B sent request to X, Y");
		acc.userSignIn(userType.DEVELOPER);
		nav.goToConnectionPage();
		pConn.connectPeople(user2);
		driver.navigate().refresh();
		pConn.connectPeople(user3);

		info("User X connect to A, B");
		acc.userSignIn(userType.AUTHOR);
		pConn.acceptInvitation(user);
		driver.navigate().refresh();
		pConn.acceptInvitation(user1);

		info("User Y connect to A, B");
		acc.userSignIn(userType.PUBLISHER);
		pConn.acceptInvitation(user);
		driver.navigate().refresh();
		pConn.acceptInvitation(user1);

		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: 
		- The gadget "Suggestions" is displayed
		- A User B is displayed in the top of the list of suggestions
		- A second user who is the last registered user is displayed.		*/ 
		acc.userSignIn(userType.ADMIN);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user1));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", firstName1+" "+lastName1));

		//Delete data test
		info("Delete users test");
		nav.goToUsersAndGroupsManagement();
		uGroup.deleteUser(username1);
		pConn.removeConnection(user2);
		pConn.removeConnection(user3);
		info("User B remove connection");
		acc.userSignIn(userType.DEVELOPER);
		pConn.removeConnection(user2);
		pConn.removeConnection(user3);
	}

	/**
	 * Case ID:79610.
	 * Test Case Name: Display 2 People with common connections.
	 * Pre-Condition: User A is not connected to user B or C User A has a common connection with User C
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test04_Display2PeopleWithCommonConnections() {
		info("Test 4: Display 2 People with common connections");
		//Pre-Condition
		info("User A request");
		nav.goToConnectionPage();
		pConn.connectPeople(user2);
		info("User C request");
		acc.userSignIn(userType.PUBLISHER);
		nav.goToConnectionPage();
		pConn.connectPeople(user2);

		info("User X connect to A & C");
		pConn.acceptInvitation(user);
		driver.navigate().refresh();
		pConn.acceptInvitation(user3);

		/*
		- Connect to Intranet with User A
		 *Input Data: 
		 *Expected Outcome: 
		- The gadget "Suggestions" is displayed
		- The User C is displayed in the top of the list of suggestions
		- The User B is displayed in the second position 		*/ 
		acc.userSignIn(userType.ADMIN);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user3));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user1));

		//Delete data test
		info("User X remove connection");
		acc.userSignIn(userType.AUTHOR);
		pConn.removeConnection(user);
		pConn.removeConnection(user3);

	}

	/**
	 * Case ID:79611.
	 * Test Case Name: Display 2 space without members are connections.
	 * Pre-Condition: More than 2 spaces exist in Intranet, users who are members of spaces are not connected to the user
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test05_Display2SpaceWithoutMembersAreConnections() {
		info("Test 5: Display 2 space without members are connections");
		String nameSpace1 = getRandomString();
		String nameSpace2 = getRandomString();
		String nameSpace3 = getRandomString();

		//Pre-Condition
		info("Add new space1");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace1,"");	
		info("Add new space2");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace2,"");
		info("Add new space3");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace3,"");

		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: 
		- The Suggestion Gadget is displayed
		- 2 Spaces are suggested
		- Space displayed are the two last spaces that has been created		*/ 
		info("View suggestion gadget");
		acc.userSignIn(userType.DEVELOPER);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace3));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace2));
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1));

		//Delete data test
		acc.userSignIn(userType.ADMIN);
		info("Delete spaces test");
		mMember.goToAllSpaces();
		mMember.deleteSpace(nameSpace1, 300000);
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace2, 300000);
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace3, 300000);
	}

	/**
	 * Case ID:79612.
	 * Test Case Name: Suggestion spaces with the most connections as members.
	 * Pre-Condition: Space A has the most members who are user's connections
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test06_SuggestionSpacesWithTheMostConnectionsAsMembers() {
		info("Test 6: Suggestion spaces with the most connections as members");
		String nameSpace1 = getRandomString();
		String nameSpace2 = getRandomString();

		//Pre-Condition
		info("Add new space1");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace1,"");	
		goToMembers(nameSpace1);
		mMember.inviteSingleUser(userType.PUBLISHER);
		info("Add new space2");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace2,"");
		info("User1 send connect requeset");
		nav.goToConnectionPage();
		pConn.connectPeople(user1);

		acc.userSignIn(userType.PUBLISHER);
		info("User2 connect to space");
		mMember.acceptInvitation(nameSpace1);
		info("User2 send connect request");
		nav.goToConnectionPage();
		pConn.connectPeople(user1);

		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: 
		- The gadget "Suggestions" is displayed
		- TheSpace A is displayed in the top of the list of suggestions
		- The Space B is displayed in the second position 		*/ 
		acc.userSignIn(userType.DEVELOPER);
		pConn.acceptInvitation(user);
		driver.navigate().refresh();
		pConn.acceptInvitation(user3);
		nav.goToHomePage();
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","1").replace("${spaceName}", nameSpace1));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","2").replace("${spaceName}", nameSpace2));

		//Delete data test
		info("Remove connection");
		pConn.removeConnection(user);
		pConn.removeConnection(user3);
		acc.userSignIn(userType.ADMIN);
		info("Delete spaces test");
		mMember.goToAllSpaces();
		mMember.deleteSpace(nameSpace1, 300000);
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace2, 300000);
	}

	/**
	 * Case ID:79613.
	 * Test Case Name: Display 1 space without members are connections and 1 space with members are connections.
	 * Pre-Condition: User A is connected with a member of space A User A isn't connected with members of space B
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test07_Display1SpaceWithoutMembersAreConnectionsAnd1SpaceWithMembersAreConnections() {
		info("Test 7: Display 1 space without members are connections and 1 space with members are connections");
		String nameSpace1 = getRandomString();
		String nameSpace2 = getRandomString();

		//Pre-Condition
		info("Add new space1");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace1,"");	
		goToMembers(nameSpace1);
		mMember.inviteSingleUser(userType.PUBLISHER);
		info("Add new space2");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace2,"");

		acc.userSignIn(userType.PUBLISHER);
		info("User2 connect to space");
		mMember.acceptInvitation(nameSpace1);
		info("User2 send connect request");
		nav.goToConnectionPage();
		pConn.connectPeople(user1);

		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: 
		- The gadget "Suggestions" is displayed
		- Space A is displayed in the top of the list of suggestions with "1 connections are member"
		- A second space B is displayed with "0 connections are member": is the first space alphabetically ordered from the list of spaces in Intranet 		*/ 
		acc.userSignIn(userType.DEVELOPER);
		pConn.acceptInvitation(user3);
		nav.goToHomePage();
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","1").replace("${spaceName}", nameSpace1));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","2").replace("${spaceName}", nameSpace2));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_STATUS_SPACE_SUGGESTION.replace("${spaceName}", nameSpace1));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_STATUS_SPACE_SUGGESTION.replace("${spaceName}", nameSpace2));

		//Delete data test
		info("Remove connection");
		pConn.removeConnection(user3);
		acc.userSignIn(userType.ADMIN);
		info("Delete spaces test");
		mMember.goToAllSpaces();
		mMember.deleteSpace(nameSpace1, 300000);
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace2, 300000);
	}

	/**
	 * Case ID:79614.
	 * Test Case Name: Display buttons "Connect and revoke" for people suggestion.
	 * Pre-Condition: The gadget suggestions contains a people suggestion
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test08_DisplayButtonsConnectAndRevokeForPeopleSuggestion() {
		info("Test 8: Display buttons Connect and revoke for people suggestion");
		/*
		- Connect to Intranet
		- From the gadget "Suggestions", move the mouse over a People suggestion labels 
		 *Input Data: 
		 *Expected Outcome: 
		- "Connect" is displayed as a bouton
		- "Revoke" is displayed as a cross		*/ 
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		info("Move mouse over space suggestion");
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user1));
		mouseOver(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user1), true);
		Utils.pause(1000);
		waitForAndGetElement(hGadget.ELEMENT_CONNECT_USER_SUGGESTIONS.replace("${peopleName}", user1));
		waitForAndGetElement(hGadget.ELEMENT_REMOVE_USER_SUGGESTIONS.replace("${peopleName}", user1));
	}

	/**
	 * Case ID:79615.
	 * Test Case Name: Display buttons "Join and revoke" for space suggestion.
	 * Pre-Condition: The gadget suggestions contains a space suggestion
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test09_DisplayButtonsJoinAndRevokeForSpaceSuggestion() {
		info("Test 9: Display buttons Join and revoke for space suggestion");
		String nameSpace1 = getRandomString();
		String nameSpace2 = getRandomString();

		//Pre-Condition
		info("Add new space1");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace1,"");	
		info("Add new space2");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace2, "", "", "Open", "", "");

		/*
		- Connect to Intranet
		- From the gadget "Suggestions", move the mouse over a Space suggestion labels 
		 *Input Data: 
		 *Expected Outcome: 
		- "Join" and "Revoke" buttons are displayed for "Public" Space
		- "Connect" and "Revoke" buttons are displayed for "Private" Space		*/ 
		acc.userSignIn(userType.DEVELOPER);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		info("for Public Space");
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace2));
		mouseOver(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace2), true);
		waitForAndGetElement(hGadget.ELEMENT_JOIN_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace2));
		waitForAndGetElement(hGadget.ELEMENT_REMOVE_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace2));

		info("for Private Space");
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1));
		mouseOver(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1), true);
		waitForAndGetElement(hGadget.ELEMENT_REQUEST_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1));
		waitForAndGetElement(hGadget.ELEMENT_REMOVE_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1));

		//Delete data test
		acc.userSignIn(userType.ADMIN);
		info("Delete spaces test");
		mMember.goToAllSpaces();
		mMember.deleteSpace(nameSpace1, 300000);		
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace2, 300000);
	}

	/**
	 * Case ID:79616.
	 * Test Case Name: Remove a space suggestion from the gadget.
	 * Pre-Condition: Gadget "SUGGESTION" contains "Spaces"
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test10_RemoveASpaceSuggestionFromTheGadget() {
		info("Test 10 Remove a space suggestion from the gadget");
		String nameSpace = getRandomString();

		//Pre-Condition
		info("Add new space1");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace,"");	
		/*
		- Connect to Intranet
		- From the gadget "Suggestion", move the mouse over the "space suggestion" label
		 *Input Data: 
		 *Expected Outcome: The button "Join" and "X" icon are displayed		*/
		acc.userSignIn(userType.DEVELOPER);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		info("Move mouse over space suggestion");
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace));
		mouseOver(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace), true);
		waitForAndGetElement(hGadget.ELEMENT_JOIN_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace));
		waitForAndGetElement(hGadget.ELEMENT_REMOVE_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace));

		/*
		- Join or revoke a space
		 *Input Data: 
		 *Expected Outcome: the suggestion fades out and it's removed permantelly from the gadget		*/
		hGadget.connectSpaceSuggestionsGadget(nameSpace);
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace));

		/*Reload the page
		 *Input Data: 
		 *Expected Outcome: The space suggestion is not suggested again.		*/ 
		nav.driver.navigate().refresh();
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace));

		//Delete data test
		acc.userSignIn(userType.ADMIN);
		info("Delete spaces test");
		mMember.goToAllSpaces();
		mMember.deleteSpace(nameSpace, 300000);		
	}

	/**
	 * Case ID:79617.
	 * Test Case Name: Remove a people suggestion from the gadget.
	 * Pre-Condition: Gadget "SUGGESTION" contains "people"
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test11_RemoveAPeopleSuggestionFromTheGadget() {
		info("Test 11 Remove a people suggestion from the gadget");
		/*
		- Connect to Intranet
		- From the gadget "Suggestion", move the mouse over the "people suggestion" label
		 *Input Data: 
		 *Expected Outcome: The button "Connect" and "X" icon are displayed		*/
		info("View suggestion gadget");
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		info("Move mouse over user suggestion");
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user1));
		mouseOver(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user1), true);
		Utils.pause(1000);
		waitForAndGetElement(hGadget.ELEMENT_CONNECT_USER_SUGGESTIONS.replace("${peopleName}", user1));
		waitForAndGetElement(hGadget.ELEMENT_REMOVE_USER_SUGGESTIONS.replace("${peopleName}", user1));

		/*
		- Connect or revoke a people suggestion
		 *Input Data: 
		 *Expected Outcome: the suggestion fades out and it's removed permantelly from the gadget		*/
		hGadget.removeUserSuggestionsGadget(user3);
		waitForTextNotPresent(hGadget.ELEMENT_CONNECT_USER_SUGGESTIONS.replace("${peopleName}", user1));

		/*Reload the page
		 *Input Data: 
		 *Expected Outcome: The people suggestion is not suggested again.		*/ 
		driver.navigate().refresh();
		waitForTextNotPresent(hGadget.ELEMENT_CONNECT_USER_SUGGESTIONS.replace("${peopleName}", user1));
	}

	/**
	 * Case ID:79618.
	 * Test Case Name: Replace the removed space suggestion by other.
	 * Pre-Condition: The space is displayed following the rule (The 2 space suggestions are spaces that have the most members who are user's connections. (then we use alphabetical order to display them)
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test12_ReplaceTheRemovedSpaceSuggestionByOther() {
		info("Test 12 Replace the removed space suggestion by other");
		String nameSpace1 = getRandomString();
		String nameSpace2 = getRandomString();
		String nameSpace3 = getRandomString();

		//Pre-Condition
		info("Add new space1");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace1,"");	
		info("Add new space2");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace2,"");	
		info("Add new space3");
		nav.goToHomePage();
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace3,"");	

		/*
		- Connect to Intranet
		- Remove a space suggestion from the gadget suggestion
		 *Input Data: 
		 *Expected Outcome: 
		- The space suggestion is removed from the gagdet
		- A new space suggestion is displayed to replace the removed one
		- if not, one less space suggestion is displayed		*/ 
		acc.userSignIn(userType.DEVELOPER);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		info("Space suggestion");
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","1").replace("${spaceName}", nameSpace1));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","2").replace("${spaceName}", nameSpace2));
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace3));
		hGadget.removeSpaceSuggestionsGadget(nameSpace1);
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","1").replace("${spaceName}", nameSpace3));

		//Delete data test
		acc.userSignIn(userType.ADMIN);
		info("Delete spaces test");
		mMember.goToAllSpaces();
		mMember.deleteSpace(nameSpace1, 300000);		
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace2, 300000);
		nav.driver.navigate().refresh();
		mMember.deleteSpace(nameSpace3, 300000);				
	}

	/**
	 * Case ID:79619.
	 * Test Case Name: Replace the removed people suggestion by other.
	 * Pre-Condition: The people is displayed following the rule (The 2 people suggestions are people with the most common connections with the users. (then we use alphabetical order to display them)
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 * BugID: https://jira.exoplatform.org/browse/PLF-5354
	 */
	@Test (groups = "errors")
	public  void test13_ReplaceTheRemovedPeopleSuggestionByOther() {
		info("Test 13 Replace the removed people suggestion by other");

		/*
		- Connect to Intranet
		- Remove a people suggestion from the gadget suggestion
		 *Input Data: 
		 *Expected Outcome: 
		- The people suggestion is removed from the gagdet
		- A new people suggestion is displayed to replace the removed one
		- if not, one less people suggestion is displayed		*/ 

		acc.userSignIn(userType.DEVELOPER);
		info("View suggestion gadget");
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS_INDEX.replace("${index}", "1").replace("${peopleName}", user3));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS_INDEX.replace("${index}", "2").replace("${peopleName}", user2));
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user));

		hGadget.removeUserSuggestionsGadget(user3);
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", user3));
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS_INDEX.replace("${index}", "1").replace("${peopleName}", user2));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS_INDEX.replace("${index}", "2").replace("${peopleName}", user));

		//Delete data test
		info("Delete users test");
		pConn.removeConnection(user3);
	}

	/**
	 * Case ID:79620.
	 * Test Case Name: Remove all suggestions from the gadget Suggestions.
	 * Pre-Condition: 
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test14_RemoveAllSuggestionsFromTheGadgetSuggestions() {
		info("Test 14 Remove all suggestions from the gadget Suggestions");

		/*
		- Connect to Intranet
		- Accept/refuse all suggestions from the gagdet SUGGESTIONS
		 *Input Data: 
		 *Expected Outcome: 
		- All suggestions disappears
		- The Gadget "Suggestions" disappears fom the Intranet Homepage		*/ 
		acc.userSignIn(userType.DEVELOPER);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		hGadget.removeUserSuggestionsGadget(user3);
		Utils.pause(500);
		hGadget.removeUserSuggestionsGadget(user2);
		Utils.pause(500);
		hGadget.removeUserSuggestionsGadget(user);
		Utils.pause(500);
		waitForElementNotPresent(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
	}

	/**
	 * Case ID:79621.
	 * Test Case Name: Gadget "Suggestions" isn't displayed when no suggestions are available.
	 * Pre-Condition: No suggestions are available:  the user is connected to everyone and member of all spaces
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 */
	@Test
	public  void test15_GadgetSuggestionsIsNotDisplayedWhenNoSuggestionsAreAvailable() {
		info("Test 15 Gadget Suggestions isn't displayed when no suggestions are available");
		//Pre-Condition
		info("User A request");
		nav.goToConnectionPage();
		pConn.connectPeople(user1);
		Utils.pause(500);
		pConn.connectPeople(user2);
		Utils.pause(500);
		pConn.connectPeople(user3);		
		Utils.pause(500);
		pConn.connectPeople(user4);
		
		info("Users connect with A");
		acc.userSignIn(userType.PUBLISHER);
		pConn.acceptInvitation(user);
		Utils.pause(500);
		acc.userSignIn(userType.DEVELOPER);
		pConn.acceptInvitation(user);
		Utils.pause(500);
		acc.userSignIn(userType.AUTHOR);
		pConn.acceptInvitation(user);
		Utils.pause(500);
		acc.signOut();
		acc.signIn("fqa", "gtngtn");
		pConn.acceptInvitation(user);

		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: 
		- The Gadget "SUGGESTIONS" isn't displayed in the right panel of the Hompege Intranet	*/
		acc.userSignIn(userType.ADMIN);
		nav.goToHomePage();
		Utils.pause(500);
		waitForElementNotPresent(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);

		//Delete data test
		info("Remove connection");
		pConn.removeConnection(user1);
		pConn.removeConnection(user2);
		pConn.removeConnection(user3);
		pConn.removeConnection(user4);			
	}

	/**
	 * Case ID:79622.
	 * Test Case Name: Gadget "Suggestions" isn't displayed when only one user is available in the product.
	 * Pre-Condition: only one user is available in the product
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 * This case pending because can not create default users (mary/demo/james) after remove all users. 
	 */
	@Test (groups = "pending")
	public  void test16_GadgetSuggestionsIsntDisplayedWhenOnlyOneUserIsAvailableInTheProduct() {
		info("Test 16 Gadget Suggestions isn't displayed when only one user is available in the product");
		String username1 = "mary";
		String password = "gtn";
		String firstName1 = "Mary";
		String lastName1 = "Williams";
		String email1 = "mary.williams@acme.exoplatform.com";
		String username2 = "demo";
		String firstName2 = "Jack";
		String lastName2 = "Miller";
		String email2 = "jack.miller@acme.exoplatform.com";
		String username3 = "james";
		String firstName3 = "James";
		String lastName3 = "Davis";
		String email3 = "james.davis@acme.exoplatform.com";
		String username4 = "fqa";
		String password4 = "gtngtn";
		String firstName4 = "FQA";
		String lastName4 = "VN";
		String email4 = "fqa@exoplatform.com";

		//Pre-Condition
		info("Delete users test");
		nav.goToUsersAndGroupsManagement();
		uGroup.deleteUser(username1);
		Utils.pause(1000);
		uGroup.deleteUser(username2);
		Utils.pause(1000);
		uGroup.deleteUser(username3);
		Utils.pause(1000);
		uGroup.deleteUser(username4);

		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: The Gadget "SUGGESTIONS" isn't displayed in the right panel of the Hompege Intranet		*/ 
		nav.goToHomePage();
		waitForElementNotPresent(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);

		//Update data test
		info("Add users");
		nav.goToNewStaff();
		acc.addNewUserAccount(username1, password, password, firstName1, lastName1, "", email1, null, null, false);
		Utils.pause(2000);		
		button.ok();
		acc.addNewUserAccount(username2, password, password, firstName2, lastName2, "", email2, null, null, false);
		Utils.pause(2000);
		button.ok();
		acc.addNewUserAccount(username3, password, password, firstName3, lastName3, "", email3, null, null, false);
		Utils.pause(2000);
		button.ok();	
		acc.addNewUserAccount(username4, password4, password4, firstName4, lastName4, "", email4, null, null, false);
		Utils.pause(2000);
		button.ok();	
		info("Add Group & Role");
		nav.goToUsersAndGroupsManagement();
		uGroup.addUsersToGroup(username1, "publisher", false, false);
		uGroup.addUsersToGroup(username3, "member", false, false);
		uGroup.addUsersToGroup(username3, "author", false, false);
		uGroup.addUsersToGroup(username4, "*", false, false);
	}

	/**
	 * Case ID:79623.
	 * Test Case Name: Should suggest last created space or last registered user when there is no sggestion based on network.
	 * Pre-Condition: User A is already connected with all users of his network ( = none of his connections has a connection that he does not have) 
	 * User A is already member of all the spaces where his network is member of ( = none of his connections is member of a space where he is not)
	 * User X, Y, Z have registered in that order but a they are not connected with User A
	 * Space X, Y, Z have been created in that order but User A is not member of them
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 * 
	 * BugID: https://jira.exoplatform.org/browse/PLF-5354
	 */
	@Test (groups = "errors")
	public  void test17_ShouldSuggestLastCreatedSpaceOrLastRegisteredUserWhenThereIsNoSggestionBasedOnNetwork() {
		info("Test 17 Should suggest last created space or last registered user when there is no sggestion based on network");
		String username1 = getRandomString();
		String password = "gtn123";
		String firstName1 = "User";
		String lastName1 = "AAA";
		String email1 = username1+"@gmail.com";
		String username2 = getRandomString();
		String firstName2 = "User";
		String lastName2 = "BBB";
		String email2 = username2+"@gmail.com";
		String username3 = "testfff";
		String firstName3 = "User";
		String lastName3 = "CCC";
		String email3 = username3+"@gmail.com";
		String nameSpace1 = getRandomString();
		String nameSpace2 = getRandomString();
		String nameSpace3 = getRandomString();

		//Pre-Condition
		info("User A request");
		nav.goToConnectionPage();
		pConn.connectPeople(user1);
		Utils.pause(500);
		pConn.connectPeople(user2);
		Utils.pause(500);
		pConn.connectPeople(user3);		
		Utils.pause(500);
		pConn.connectPeople(user4);

		info("Create new 3 users");		
		nav.goToNewStaff();
		acc.addNewUserAccount(username1, password, password, firstName1, lastName1, "", email1, null, null, false);
		Utils.pause(2000);		
		button.ok();
		acc.addNewUserAccount(username2, password, password, firstName2, lastName2, "", email2, null, null, false);
		Utils.pause(2000);
		button.ok();
		acc.addNewUserAccount(username3, password, password, firstName3, lastName3, "", email3, null, null, false);
		Utils.pause(2000);
		button.ok();
		acc.signOut();

		info("Users connect with A");
		acc.userSignIn(userType.PUBLISHER);
		pConn.acceptInvitation(user);
		Utils.pause(500);
		acc.userSignIn(userType.DEVELOPER);
		pConn.acceptInvitation(user);
		Utils.pause(500);
		acc.userSignIn(userType.AUTHOR);
		pConn.acceptInvitation(user);
		Utils.pause(500);
		acc.signOut();
		acc.signIn(user4, "gtngtn");
		pConn.acceptInvitation(user);

		info("User X create spaceX");
		acc.signIn(username1, password);
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace1,"");
		acc.signOut();

		info("User Y create spaceY");
		acc.signIn(username2, password);
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace2,"");
		acc.signOut();

		info("User Z create spaceZ");
		acc.signIn(username3, password);
		mMember.goToMySpacePage();
		mMember.addNewSpace(nameSpace3,"");
		acc.signOut();

		/*With User A, go to homepage
		 *Input Data: 
		 *Expected Outcome: User Y and Z are suggested Space Y and Z are suggested		*/
		acc.userSignIn(userType.ADMIN);
		waitForAndGetElement(hGadget.ELEMENT_SUGGESTION_GADGET_FORM);
		info("Users suggestion");
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", firstName3+" "+lastName3));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", firstName2+" "+lastName2));
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_USER_SUGGESTIONS.replace("${peopleName}", firstName1+" "+lastName1));

		info("Space suggestion");
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","1").replace("${spaceName}", nameSpace3));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS_INDEX.replace("${index}","2").replace("${spaceName}", nameSpace2));
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1));

		/*Accept User Z and Join Space Z
		 *Input Data: 
		 *Expected Outcome: User X is suggestedSpace X is suggested		*/ 
		hGadget.connectSpaceSuggestionsGadget(nameSpace3);
		waitForElementNotPresent(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace3));
		waitForAndGetElement(hGadget.ELEMENT_VERIFY_SPACE_SUGGESTIONS.replace("${spaceName}", nameSpace1));

		//Delete data test
		info("Remove connection");
		pConn.removeConnection(user1);
		pConn.removeConnection(user2);
		pConn.removeConnection(user3);
		pConn.removeConnection(user4);
		info("Delete users test");
		nav.goToUsersAndGroupsManagement();
		uGroup.deleteUser(username1);
		Utils.pause(1000);
		nav.goToUsersAndGroupsManagement();
		uGroup.deleteUser(username2);
		Utils.pause(1000);
		nav.goToUsersAndGroupsManagement();
		uGroup.deleteUser(username3);
	}

	/** 
	 * Case ID:95005.
	 * Test Case Name: Display suggestion gadget when there are only 2 users.
	 * Pre-Condition: 
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/02/10 08:46:52
	 * This case pending because can not start package without extension. 
	 */
	@Test (groups = "pending")
	public  void test18_DisplaySuggestionGadgetWhenThereAreOnly2Users() {
		info("Test 18 Display suggestion gadget when there are only 2 users");
		/*
		- Start a fresh package without extension
		- Set up an account eg fqa
		 *Input Data: 
		 *Expected Outcome: 
		- Server starts successfully
		- Only 2 users exist: root and fqa		*/

		/*
		- Log in as root in a browser
		- Log in as fqa in a browser
		- Refresh both browser
		 *Input Data: 
		 *Expected Outcome: 
		- In browser with fqa, root is listed in suggestion gadget 
		- In browser with root, fqais listed in suggestion gadget 		*/


		/*
		- From root connects to fqa
		- fqa accepts
		- Stand at intranet homepage, Refresh both browsers
		 *Input Data: 
		 *Expected Outcome: 
		- Suggestion gadget is not shown.		*/ 
	}
}