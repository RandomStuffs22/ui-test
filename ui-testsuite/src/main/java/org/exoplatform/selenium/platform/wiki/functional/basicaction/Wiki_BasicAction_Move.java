package org.exoplatform.selenium.platform.wiki.functional.basicaction;



import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.Button;
import org.exoplatform.selenium.platform.social.ManageMember;
import org.exoplatform.selenium.platform.social.SpaceManagement;
import org.exoplatform.selenium.platform.wiki.BasicAction;
import org.openqa.selenium.By;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.exoplatform.selenium.platform.ManageAccount;




	/**
	* @author hantv
	*
	*/
		public class Wiki_BasicAction_Move extends BasicAction {
			ManageAccount magAcc;
			Button button;
			ManageMember magMember;

			//Space
			SpaceManagement spaceMag;
			@BeforeMethod
			public void setUpBeforeTest(){
				initSeleniumTest();
				driver.get(baseUrl);
				driver.manage().window().maximize();
				magAcc = new ManageAccount(driver);
				button = new Button(driver);
				magAcc.signIn("john", "gtn");
				spaceMag = new SpaceManagement(driver);
				
			}

			String[] user1= {"james"};
	/**
	*<li> Case ID:69785.</li>
	*<li> Test Case Name: Move a page when user does not have edit permission on destination page.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 11:53:09</li>
	*/
	@Test
	public  void test01_MoveAPageWhenUserDoesNotHaveEditPermissionOnDestinationPage() {
		
		String PAGE_NAME1 = "wiki6";
		String PAGE_NAME2 = "wiki7";
		
		By ELEMENT_PAGE1 = By.linkText(PAGE_NAME1);
		By ELEMENT_PAGE2 = By.linkText(PAGE_NAME2);

		String ELEMENT_VERIRY_MESSAGE = "You have no edit permission at the destination page";

		goToWiki();

		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);

		addPagePermission(0,user1);

		editPagePermission("james", true, true, false, 2);
		
		deletePagePermission("any");

		click(ELEMENT_WIKI_HOME);

		addBlankWikiPage(PAGE_NAME2, PAGE_NAME2, 0);
		
		editPagePermission("any", true, false, false, 2);

		magAcc.signOut();

		magAcc.signIn("james", "gtn");

		goToWiki();

		click(ELEMENT_PAGE1);

		movePage(PAGE_NAME1,PAGE_NAME2);

		waitForTextPresent(ELEMENT_VERIRY_MESSAGE);

		click(button.ELEMENT_OK_BUTTON);

		waitForElementNotPresent(button.ELEMENT_OK_BUTTON);

		//cancel();
		click(ELEMENT_CANCEL_BUTTON_MOVE_PAGE);
		waitForElementNotPresent(ELEMENT_CANCEL_BUTTON_MOVE_PAGE);

		magAcc.signOut();

		magAcc.signIn("john", "gtn");

		goToWiki();

		click(ELEMENT_PAGE1);

		deleteCurrentWikiPage();

		click(ELEMENT_PAGE2);

		deleteCurrentWikiPage();

 	}

	/**
	*<li> Case ID:69786.</li>
	*<li> Test Case Name: Move a page when user doesn't have edit permission on page.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 11:53:09</li>
	*/
	@Test
	public  void test02_MoveAPageWhenUserDoesntHaveEditPermissionOnPage() {
		
		String PAGE_NAME1 = "wiki5";
		
		By ELEMENT_PAGE1 = By.linkText(PAGE_NAME1);

		goToWiki();

		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);

		addPagePermission(0,user1);

		deletePagePermission("any");

		magAcc.signOut();

		magAcc.signIn("james", "gtn");

		goToWiki();

		click(ELEMENT_PAGE1);

		//mouseOver(ELEMENT_MORE_LINK, true);
		mouseOverAndClick(ELEMENT_MORE_LINK);

		waitForElementNotPresent(ELEMENT_MOVE_PAGE_LINK);

		magAcc.signOut();

		magAcc.signIn("john", "gtn");

		goToWiki();

		click(ELEMENT_PAGE1);

		deleteCurrentWikiPage();
 	}

	/**
	*<li> Case ID:69787.</li>
	*<li> Test Case Name: Move a page when user have edit permission on page.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 11:53:09</li>
	*/
	@Test
	public  void test03_MoveAPageWhenUserHaveEditPermissionOnPage() {
		String PAGE_NAME1 = "wiki1";
		String PAGE_NAME2 = "wiki2";
		
		By ELEMENT_PAGE1 = By.linkText(PAGE_NAME1);
		By ELEMENT_PAGE2 = By.linkText(PAGE_NAME2);
		
		goToWiki();

		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);

		//click(ELEMENT_PAGE1);
		
		deletePagePermission("any");

		addPagePermission(0, user1);
		
		editPagePermission("james", true, true, false, 2);
		
		click(ELEMENT_WIKI_HOME);

		addBlankWikiPage(PAGE_NAME2, PAGE_NAME2, 0);

		//click(ELEMENT_PAGE2);
		
		deletePagePermission("any");

		addPagePermission(0, user1);
		
		editPagePermission("james", true, true, false, 2);
		
		magAcc.signOut();

		magAcc.signIn("james", "gtn");

		goToWiki();
		
		click(ELEMENT_PAGE1);		
			
		movePage(PAGE_NAME1, PAGE_NAME2);

		click(ELEMENT_PAGE2);

		deleteCurrentWikiPage();
		

 	}

	
	@Test
	public  void test04_PagesSubpagesShouldBeMovedWithThePage() {
		String PAGE_NAME1 = "pagetomove";
		String PAGE_SUB1 = "pagesub1";
		String PAGE_SUB2 = "pagesub2";
		String PAGE_NAME2 = "pagetodest";
		String spacemove = "moves";
		String spacedest = "dests";
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacedest, "");
		waitForAndGetElement(By.linkText(spacedest));
		goToWikiFromSpace(spacedest);
		
		addBlankWikiPage(PAGE_NAME2, PAGE_NAME2, 0);
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		addBlankWikiPage(PAGE_SUB1, PAGE_SUB1, 0);
		click(By.linkText(PAGE_SUB1));
		addBlankWikiPage(PAGE_SUB2, PAGE_SUB2, 0);
		click(By.linkText(PAGE_NAME1));
		
		
		movePage(PAGE_NAME1, PAGE_NAME2,spacedest);
		
		/*Clear data*/
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		spaceMag.deleteSpace(spacedest,300000);
		
		

 	}

	/**
	*<li> Case ID:79568.</li>
	*<li> Test Case Name: Page's attachments should be move with the page.</li>
	*<li> Pre-Condition: User is member of "Space Move" and "Space Destination 2"Wiki of "Space Move" has:
	- Page A
	- Page B
	- Page with attachments (with two images in its content)Wiki of "Space Destination 2" is empty.</li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 11:53:09</li>
	*/
	@Test
	public  void test05_PagesAttachmentsShouldBeMoveWithThePage() {
		
		String PAGE_NAME1 = "pagetomove";
		String PAGE_NAME2 = "pagetodest";
		String spacemove = "movespace2";
		String spacedest = "destspace2";
		String attachFile = "AttachFile";
		String content = "Add attached file when exits";
		String link = "Wiki_Sniff_Attachment_01.doc";
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacedest, "");
		waitForAndGetElement(By.linkText(spacedest));
		goToWikiFromSpace(spacedest);
		
		addBlankWikiPage(PAGE_NAME2, PAGE_NAME2, 0);
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		addBlankWikiPageHasAttachment(attachFile, content, link);		
		
		
		click(By.linkText(PAGE_NAME1));
		
		
		movePage(PAGE_NAME1, PAGE_NAME2,spacedest);
		
		/*Clear data*/
	
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		spaceMag.deleteSpace(spacedest,300000);

 	}

	/**
	*<li> Case ID:79569.</li>
	*<li> Test Case Name: Page's sub-pages and attachments should be moved with the page.</li>
	*<li> Pre-Condition: User is member of "Space Move" and "Space Destination 2"Wiki of "Space Move" has:

	*/

	public  void test06_PagesSubpagesAndAttachmentsShouldBeMovedWithThePage() {
		
		String PAGE_NAME1 = "pagetomove";
		String PAGE_NAME2 = "pagetodest";
		String PAGE_SUB1 = "page_sub1";
		String spacemove = "movespa";
		String spacedest = "destspa";
		String attachFile = "AttachFile";
		String content = "Add attached file when exits";
		String link = "Wiki_Sniff_Attachment_01.doc";
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacedest, "");
		waitForAndGetElement(By.linkText(spacedest));
		goToWikiFromSpace(spacedest);
		
		addBlankWikiPage(PAGE_NAME2, PAGE_NAME2, 0);
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		
		click(By.linkText(PAGE_NAME1));
		addBlankWikiPage(PAGE_SUB1, PAGE_SUB1, 0);
		click(By.linkText(PAGE_SUB1));
		addBlankWikiPageHasAttachment(attachFile, content, link);		
		
		
		click(By.linkText(PAGE_NAME1));
		
		
		movePage(PAGE_NAME1, PAGE_NAME2,spacedest);
		
		/*Clear data*/
	
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		spaceMag.deleteSpace(spacedest,300000);

 	}

	/**
	*<li> Case ID:79573.</li>
	*<li> Test Case Name: Space names displayed in location labels should be user friendly and not technical.</li>
	*<li> Pre-Condition: User is member of "Space Move" and "Space Destination 2"Wiki of "Space Move" has:
	- Page B</li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 11:53:09</li>
	*/
	@Test
	public  void test07_SpaceNamesDisplayedInLocationLabelsShouldBeUserFriendlyAndNotTechnical() {
		

		String PAGE_NAME1 = "pagetomove";
		String PAGE_NAME2 = "pagetodest";
		
		String spacemove = "movespace07";
		String spacedest = "destspace07";
		
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacedest, "");
		waitForAndGetElement(By.linkText(spacedest));
		goToWikiFromSpace(spacedest);
		addBlankWikiPage(PAGE_NAME2, PAGE_NAME2, 0);
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		mouseOverAndClick(ELEMENT_MORE_LINK);
		mouseOverAndClick(ELEMENT_MOVE_PAGE_LINK);
		waitForAndGetElement(ELEMENT_MOVE_PAGE_POPUP);
		click(ELEMENT_SELECT_SPACE_DESTINATION);
		click(ELEMENT_SPACE_NAME_SELECTED.replace("${space}", spacedest));
		waitForAndGetElement(By.linkText(spacedest));
		waitForAndGetElement(By.xpath("//*[@id='newLocation']/*[@class='breadcrumb']/li[2]/a[contains(text(),'Wiki Home')]"));
		
		/*Clear data*/
	
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		spaceMag.deleteSpace(spacedest,300000);

 	}
	/** Move Layout*/
	/**
	*<li> Case ID:79542.</li>
	*<li> Test Case Name: Move Layout is displaying space switcher.</li>
	*<li> Pre-Condition: User is member of Space: Space Move</li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 17:29:36</li>
	*/
	@Test
	public  void test01_MoveLayoutIsDisplayingSelecttheDistination() {
		
		String PAGE_NAME1 = "pagetomove";
		String spacemove = "movespace001";
		
	//	spaceMag.goToMySpacePage();
	//	spaceMag.addNewSpace(spacemove, "");
	//	waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
	//	addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		mouseOverAndClick(ELEMENT_MORE_LINK);
		mouseOverAndClick(ELEMENT_MOVE_PAGE_LINK);
		waitForAndGetElement(ELEMENT_MOVE_PAGE_POPUP);
		waitForAndGetElement(By.xpath("//div[contains(text(),'Select the destination')]"));
		
		/*Clear data*/
	
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		
 	}

	@Test
	public  void test02_MoveLayoutIsDisplayingSpaceSwitcher() {
		
		String PAGE_NAME1 = "pagetomove";
		String spacemove = "movespace002";
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		mouseOverAndClick(ELEMENT_MORE_LINK);
		mouseOverAndClick(ELEMENT_MOVE_PAGE_LINK);
		waitForAndGetElement(ELEMENT_MOVE_PAGE_POPUP);
		click(ELEMENT_SELECT_SPACE_DESTINATION);
		waitForAndGetElement(ELEMENT_SPACE_NAME_SELECTED.replace("${space}",spacemove));
		
		/*Clear data*/
	
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		
 	}
	/**
	*<li> Case ID:79544.</li>
	*<li> Test Case Name: Selecting a space with the space switcher should feed the destination container.</li>
	*<li> Pre-Condition: User is member of space : "Space Move", "Space Destination"Wiki of "Space Move" contains a page "Page A"</li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 17:29:36</li>
	*/
	@Test
	public  void test03_SelectingASpaceWithTheSpaceSwitcherShouldFeedTheDestinationContainer() {
		info("Test 3: Selecting a space with the space switcher should feed the destination container");
		String PAGE_NAME1 = "pagetomove";
		String spacemove = "movespace003";
		String spacedest = "destspace003";
		String PAGE_NAME2 = "pagetodest";
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacedest, "");
		goToWikiFromSpace(spacedest);
		addBlankWikiPage(PAGE_NAME2, PAGE_NAME2, 0);
		
		waitForAndGetElement(By.linkText(spacedest));
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		mouseOverAndClick(ELEMENT_MORE_LINK);
		mouseOverAndClick(ELEMENT_MOVE_PAGE_LINK);
		waitForAndGetElement(ELEMENT_MOVE_PAGE_POPUP);
		click(ELEMENT_SELECT_SPACE_DESTINATION);
		click(ELEMENT_SPACE_NAME_SELECTED.replace("${space}", spacedest));
		waitForAndGetElement(By.linkText(spacedest));
		/*Clear data*/
		waitForAndGetElement(By.linkText(PAGE_NAME2));
		
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		spaceMag.deleteSpace(spacedest,300000);
		
 	}

	/**
	*<li> Case ID:79545.</li>
	*<li> Test Case Name: Not selecting a space with the space switcher should have no impact on the destination container.</li>
	*<li> Pre-Condition: User is member of space : "Space Move", "Space Destination"Wiki of "Space Move" contains a page "Page A"</li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 17:29:36</li>
	*/
	@Test
	public  void test04_NotSelectingASpaceWithTheSpaceSwitcherShouldHaveNoImpactOnTheDestinationContainer() {
		info("Test 4: Not selecting a space with the space switcher should have no impact on the destination container");

		String PAGE_NAME1 = "pagetomove";
		String spacemove = "movespace004";
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		mouseOverAndClick(ELEMENT_MORE_LINK);
		mouseOverAndClick(ELEMENT_MOVE_PAGE_LINK);
		waitForAndGetElement(ELEMENT_MOVE_PAGE_POPUP);
		click(ELEMENT_SELECT_SPACE_DESTINATION);
		waitForAndGetElement(By.xpath("//*[@id='UISpaceSwitcher_/portal/intranet']"));
		click(ELEMENT_SELECT_SPACE_DESTINATION);
		waitForAndGetElement(By.linkText(spacemove));
		waitForAndGetElement(By.linkText(PAGE_NAME1));
		/*Clear data*/
	
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		
 	}

	/**
	*<li> Case ID:79546.</li>
	*<li> Test Case Name: Space switcher must show the currently browsed space.</li>
	*<li> Pre-Condition: User is member of Space "Space Move"</li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 17:29:36</li>
	*/
	@Test
	public  void test05_SpaceSwitcherMustShowTheCurrentlyBrowsedSpace() {
		info("Test 5: Space switcher must show the currently browsed space");
		String PAGE_NAME1 = "pagetomove";
		String spacemove = "movespace005";
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		mouseOverAndClick(ELEMENT_MORE_LINK);
		mouseOverAndClick(ELEMENT_MOVE_PAGE_LINK);
		waitForAndGetElement(ELEMENT_MOVE_PAGE_POPUP);
		click(ELEMENT_SELECT_SPACE_DESTINATION);
		waitForAndGetElement(By.linkText(spacemove));
		waitForAndGetElement(By.linkText(PAGE_NAME1));
		/*Clear data*/
	
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		

 	}

	/**
	*<li> Case ID:79574.</li>
	*<li> Test Case Name: Move layout should display destination labels outside destination container.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by hantv at 2014/03/24 17:29:36</li>
	*/
	@Test
	public  void test06_MoveLayoutShouldDisplayDestinationLabelsOutsideDestinationContainer() {
		info("Test 6: Move layout should display destination labels outside destination container");
		String PAGE_NAME1 = "pagetomove";
		String spacemove = "movespace06";
		
		spaceMag.goToMySpacePage();
		spaceMag.addNewSpace(spacemove, "");
		waitForAndGetElement(By.linkText(spacemove));
		goToWikiFromSpace(spacemove);
		addBlankWikiPage(PAGE_NAME1, PAGE_NAME1, 0);
		click(By.linkText(PAGE_NAME1));
		mouseOverAndClick(ELEMENT_MORE_LINK);
		mouseOverAndClick(ELEMENT_MOVE_PAGE_LINK);
		waitForAndGetElement(ELEMENT_MOVE_PAGE_POPUP);
		waitForAndGetElement(By.xpath("//*[@class='barContent']"));
		
		/*Clear data*/
	
		spaceMag.goToAllSpaces();
		spaceMag.deleteSpace(spacemove,300000);
		

 	}
	@AfterMethod
	public void afterTest(){
		driver.manage().deleteAllCookies();
		driver.quit();
	}
	}